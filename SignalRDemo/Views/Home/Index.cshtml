@{
    ViewData["Title"] = "Home Page";
}
<script src="~/js/signalr/signalr.js"></script>


<div class="text-center">
    <h1 class="display-4">Welcome to SignalR</h1>



    <form>

        <div class="row">
            <div class="form-group col-md-6">
                <label htmlFor="product">Item</label>
                <input type="text"
                       id="product"
                       class="form-control"
                       value="Laptop" />
            </div>

        </div>


        <div class="row">
            <div class="form-group col-md-6">
                <label htmlFor="quantity">Quantity</label>
                <input type="text"
                       id="quantity"
                       class="form-control"
                       value="1" />
            </div>

        </div>

        <div class="row">
            <div class="col-md-6 mt-4">
                <button id="submit" type="submit" class="btn btn-primary">
                    Buy something
                </button>
            </div>

        </div>
        <div class="row">
            <div class="col-md-6 mt-4">
                <div id="status"></div>
            </div>
        </div>
    </form>


    <script>

        //WebSocket = undefined;
        //EventSource = undefined;

        let connection = null;

        //https://bit.ly/3vl1dXf

        setupConnection = () => {

        connection = new signalR.HubConnectionBuilder()
            .withUrl("/ordershub")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.on("ReceiveOrderUpdate",  (update) => {
                const statusDiv = document.getElementById("status");
                statusDiv.innerHTML = update;
            }
        );

        connection.on("NewOrder", function(order) {
            var statusDiv = document.getElementById("status");
            statusDiv.innerHTML = "Someone ordered an " + order.product;
        });

        connection.on("Finished", function() {
            
            connection.stop();
        });



        connection.start()
        .catch(err => console.error(err.toString()));
        };

        setupConnection();

        document.getElementById("submit").addEventListener("click", e => {
            e.preventDefault();
            const product = document.getElementById("product").value;
            const quantity = document.getElementById("quantity").value;

            fetch("/api/Orders",
                {
                    method: "POST",
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify( { product, quantity } )
                })
                .then(response => response.text())
                .then(orderNo => {
                    connection.invoke("GetUpdate", parseInt(orderNo)  );
                })
        });
    </script>
</div>
